#!/bin/sh
#|-*- mode:lisp -*-|#
#|Make executable from script.
exec ros -Q +R -- $0 "$@"
|#

(ql:quickload :uiop :silent t)

(defpackage :ros.sub.build
  (:use :cl))
(in-package :ros.sub.build)

(defun parse-argv (argv)
  (let* ((header "exec ros")
         (hl (length header)))
    (and (equal header (subseq argv 0 (length header)))
         (loop :for last := nil :then c
            :for i :from 0
            :for c :across argv
            :when (and (equal #\- last)
                       (equal #\- c))
            :do (return (subseq argv hl (1- i)))))))

(defun help ()
  (format *error-output* "~&Usage: ~A build <file>~%"
          (ros:opt "argv0")))

(defun main- (argv)
  (let ((file (third argv))
        exec)
    (unless file
      (help)
      (ros:quit -1))
    (unless (probe-file file)
      (error "File does not exist: '~A'" file))
    (with-open-file (in file)
      (loop repeat 4
         for line = (read-line in)
         when (ignore-errors (string= line "exec" :end1 4))
         do (setf exec (parse-argv line))))
    (ros:roswell `(,exec "dump" "executable" ,@(cddr argv))
                 :interactive nil)))

(defun main (&rest argv)
  (unless argv
    (help)
    (ros:quit -1))
  (handler-case (main- argv)
    (error (e)
      (format *error-output* "~&~A~%" e)
      (help))))

;;(defun test (&rest argv) (with-open-file (in (car argv))))
